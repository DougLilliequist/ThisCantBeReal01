{"version":3,"sources":["vendors/ogl/src/math/functions/Vec3Func.js","vendors/ogl/src/math/Vec3.js","vendors/ogl/src/core/Renderer.js","Vendors/ogl/src/math/functions/Vec3Func.js","Vendors/ogl/src/math/Vec3.js","Vendors/ogl/src/math/functions/Vec4Func.js","Vendors/ogl/src/math/functions/QuatFunc.js","Vendors/ogl/src/math/Quat.js","Vendors/ogl/src/math/functions/Mat4Func.js","Vendors/ogl/src/math/Mat4.js","Vendors/ogl/src/math/functions/EulerFunc.js","Vendors/ogl/src/math/Euler.js","Vendors/ogl/src/core/Transform.js","Vendors/ogl/src/core/Camera.js","Vendors/ogl/src/math/functions/Vec2Func.js","Vendors/ogl/src/math/Vec2.js","Vendors/ogl/src/extras/Orbit.js","vendors/ogl/src/core/Geometry.js","vendors/ogl/src/extras/Plane.js","Vendors/ogl/src/core/Program.js","Vendors/ogl/src/core/Texture.js","Vendors/ogl/src/math/functions/Mat3Func.js","Vendors/ogl/src/math/Mat3.js","Vendors/ogl/src/core/Mesh.js","src/Quad/shader/quad.vert","src/Quad/shader/quad.frag","src/Quad/index.js","Vendors/ogl/src/core/Geometry.js","Vendors/ogl/src/extras/Triangle.js","Vendors/ogl/src/core/RenderTarget.js","src/Flow/shaders/triangle.vert","src/Flow/shaders/opticalflow.frag","src/Flow/shaders/capture.frag","src/Flow/shaders/blur.frag","src/Flow/index.js","vendors/ogl/src/core/Program.js","src/Fluid/shaders/baseVertex.vert","src/Fluid/shaders/advection.frag","src/Fluid/shaders/advectionManualFiltering.frag","src/Fluid/shaders/clear.frag","src/Fluid/shaders/curl.frag","src/Fluid/shaders/divergence.frag","src/Fluid/shaders/gradientSubtract.frag","src/Fluid/shaders/pressure.frag","src/Fluid/shaders/splat.frag","src/Fluid/shaders/vorticity.frag","src/Fluid/index.js","src/index.js","src/app.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["EPSILON","length","a","x","y","z","Math","sqrt","copy","out","set","add","b","subtract","multiply","divide","scale","distance","squaredDistance","squaredLength","negate","inverse","normalize","len","dot","cross","ax","ay","az","bx","by","bz","lerp","t","transformMat4","m","w","scaleRotateMat4","transformMat3","transformQuat","q","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","tempA","tempB","cosine","PI","acos","exactEquals","Vec3","Vec3Func","v","va","vb","mat4","o","Array","tempVec3","ID","Renderer","canvas","document","createElement","width","height","dpr","alpha","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","powerPreference","autoClear","webgl","attributes","color","id","gl","getContext","isWebgl2","renderer","setSize","state","blendFunc","src","ONE","dst","ZERO","blendEquation","modeRGB","FUNC_ADD","cullFace","frontFace","CCW","depthMask","depthFunc","LESS","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","textureUnits","activeTextureUnit","boundBuffer","uniformLocations","Map","extensions","getExtension","vertexAttribDivisor","drawArraysInstanced","drawElementsInstanced","createVertexArray","bindVertexArray","deleteVertexArray","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","Object","assign","style","enable","disable","srcAlpha","dstAlpha","undefined","blendFuncSeparate","modeAlpha","blendEquationSeparate","value","activeTexture","TEXTURE0","target","FRAMEBUFFER","buffer","bindFramebuffer","extension","webgl2Func","extFunc","bind","renderOrder","program","zDepth","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","draw","frustumCulled","frustumIntersectsMesh","push","opaque","transparent","ui","forEach","depthTest","worldMatrix","getTranslation","applyMatrix4","projectionViewMatrix","sortOpaque","sortTransparent","sortUI","concat","update","clear","setViewport","DEPTH_TEST","setDepthMask","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","getRenderList","aw","identity","setAxisAngle","axis","rad","s","sin","cos","bw","rotateX","rotateY","rotateZ","slerp","omega","cosom","sinom","scale0","scale1","invert","a0","a1","a2","a3","invDot","conjugate","fromMat3","fTrace","fRoot","i","j","k","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","vec4","Quat","onChange","QuatFunc","qA","qB","matrix3","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","transpose","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","determinant","b0","b1","b2","b3","translate","rotate","hypot","c","b12","b20","b21","b22","abs","mat","getScaling","getMaxScaleOnAxis","max","getRotation","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat","yx","zx","zy","perspective","fovy","aspect","near","far","f","tan","nf","ortho","left","right","bottom","top","lr","bt","targetTo","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","multiplyScalar","Mat4","Mat4Func","ma","mb","fov","pos","fromRotationMatrix","asin","min","atan2","tmpMat4","Euler","EulerFunc","fromQuaternion","Transform","parent","children","matrix","matrixAutoUpdate","position","quaternion","rotation","notifyParent","removeChild","addChild","child","notifyChild","indexOf","setParent","splice","force","updateMatrix","worldMatrixNeedsUpdate","l","compose","callback","lookAt","tempMat4","tempVec3a","tempVec3b","Camera","zoom","projectionMatrix","viewMatrix","worldPosition","type","orthographic","fromPerspective","fromOrthogonal","frustum","constant","invLen","geometry","bounds","radius","Infinity","computeBoundingSphere","center","frustumIntersectsSphere","normal","plane","transformMat2","transformMat2d","Vec2","Vec2Func","mat3","STATE","NONE","ROTATE","DOLLY","PAN","DOLLY_PAN","tempVec2a","tempVec2b","Orbit","object","element","enabled","ease","inertia","enableRotate","rotateSpeed","autoRotate","autoRotateSpeed","enableZoom","zoomSpeed","enablePan","panSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","sphericalDelta","phi","theta","sphericalTarget","spherical","panDelta","offset","sub","handleAutoRotate","sinPhiRadius","forcePosition","rotateStart","panStart","dollyStart","mouseButtons","ORBIT","ZOOM","getZoomScale","pow","panLeft","panUp","pan","deltaX","deltaY","el","body","targetDistance","clientHeight","dolly","dollyScale","handleMoveRotate","handleMouseMoveDolly","e","clientX","clientY","handleMovePan","handleTouchStartDollyPan","dx","touches","pageX","dy","pageY","handleTouchMoveDollyPan","onMouseDown","button","window","addEventListener","onMouseMove","onMouseUp","removeEventListener","onMouseWheel","stopPropagation","preventDefault","onTouchStart","onTouchMove","onTouchEnd","onContextMenu","addHandlers","passive","remove","ATTR_ID","isBoundsWarned","Geometry","console","error","VAOs","drawRange","start","count","instancedCount","currentGeometry","glState","key","addAttribute","attr","size","data","constructor","Float32Array","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","byteLength","divisor","instanced","needsUpdate","createBuffer","updateAttribute","isInstanced","warn","index","bindBuffer","bufferData","STATIC_DRAW","attributeOrder","bindAttributes","attributeLocations","location","name","numLoc","vertexAttribPointer","enableVertexAttribArray","mode","TRIANGLES","createVAO","drawElements","drawArrays","array","getPositionArray","computeBoundingBox","maxRadiusSq","fromArray","vao","deleteBuffer","Plane","widthSegments","heightSegments","wSegs","hSegs","num","numIndices","uv","Uint32Array","buildPlane","u","uDir","vDir","ii","io","segW","segH","iy","ix","d","arrayCacheF32","Program","vertex","fragment","uniforms","BACK","depthWrite","setBlendFunc","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","addLineNumbers","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","getAttribLocation","join","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthFunc","setBlendEquation","flipFaces","textureUnit","programActive","currentProgram","useProgram","activeUniform","texture","setUniform","applyState","CW","deleteProgram","flatten","setValue","get","slice","arraysEqual","setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","arrayLen","valueLen","warnCount","message","emptyPixel","Uint8Array","isPowerOf2","Texture","image","TEXTURE_2D","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","generateMipmaps","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","anisotropy","level","createTexture","store","REPEAT","bindTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage2D","generateMipmap","onUpdate","fromMat4","normalFromMat4","projection","Mat3","Mat3Func","vec3a","vec3b","vec3c","Mesh","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","mesh","modelMatrix","cameraPosition","getNormalMatrix","use","module","exports","vert","require","frag","Quad","_Video","_Output","_Resolution","inputVideo","readyState","HAVE_CURRENT_DATA","Triangle","RenderTarget","depthTexture","createFramebuffer","textures","framebufferTexture2D","COLOR_ATTACHMENT0","NEAREST","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","stencilBuffer","STENCIL_INDEX8","STENCIL_ATTACHMENT","depthStencilBuffer","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","opticalFlowFrag","captureFrag","blur","Flow","firstTick","initCameraCapture","initBlurPass","initOpticalFlowPass","initVelocityPass","cameraFrame","params","currentFrame","prevFrame","cameraCaptureScene","_CameraFrame","cameraCaptureQuad","blurTextureWrite","blurTextureRead","blurDirectionX","blurDirectionY","blurScene","_Texture","_Flip","_BlurDirection","blurQuad","HALF_FLOAT","HALF_FLOAT_OES","RGBA16F","flowVectorTextureWrite","flowVectorTextureRead","opticalFlowScene","_CurrentFrame","_PrevFrame","_PrevFlow","_TexelSize","_Scale","opticalFlowQuad","blurIterationCount","blurRadius","render","tmp","blurInputVideo","saveCameraFrame","base","advectionShader","advectionManualFilterShader","clearShader","curlShader","divergenceShader","gradientSubtractShader","pressureShader","splatShader","vorticityShader","Fluid","initSimParams","initSimulationPrograms","simRes","dyeRes","texelSize","simParams","iterations","densityDissipation","velocityDissipation","pressureDissipation","curlStrength","supportLinearFiltering","halfFloat","filtering","rgba","rg","r","getSupportedFormat","RG16F","RG","R16F","RED","densityFBO","createPingPongBuffer","velocityFBO","pressureFBO","divergence","curl","triangle","clearUniforms","uTexture","clearProgram","splatUniforms","uTarget","aspectRatio","splatProgram","advectionUniforms","dyeTexelSize","uVelocity","uSource","dt","dissipation","advectionProgram","divergenceUniforms","divergenceProgram","curlUniforms","curlProgram","vorticityUniforms","uCurl","vorticityProgram","pressureUniforms","uPressure","uDivergence","pressureProgram","gradientSubtractUniforms","gradientSubtractProgram","flowVectorTexture","read","write","swap","splat","fbo","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","supportRenderTextureFormat","OpticalFlow","innerWidth","h","innerHeight","clearColor","overflow","zIndex","appendChild","orbitCamera","initVideo","initOpticalFlow","initFluidSim","initQuad","initEvents","streamAvailable","video","options","audio","navigator","mediaDevices","getUserMedia","then","stream","srcObject","play","catch","flow","fluidSim","quad","Output","onResize","requestAnimationFrame","FluidOutput","App","log","onload","OVERLAY_ID","OldModule","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","getElementById","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","isArray","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"app.a6a4d504.js","sourceRoot":"..","sourcesContent":["const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) {\n            this.gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\n        }\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.gl.viewport(0, 0, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [0, 0, 0];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (notifyParent && this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = new Mat4();\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left,\n        right = this.right,\n        bottom = this.bottom,\n        top = this.top,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(node.worldMatrix);\n\n        const radius = node.geometry.bounds.radius * node.worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\n// TODO: abstract event handlers so can be fed from other sources\n// TODO: make scroll zoom more accurate than just >/< zero\n// TODO: be able to pass in new camera position\n\nimport { Vec3 } from '../math/Vec3.js';\nimport { Vec2 } from '../math/Vec2.js';\n\nconst STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3 };\nconst tempVec3 = new Vec3();\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\n\nexport function Orbit(\n    object,\n    {\n        element = document,\n        enabled = true,\n        target = new Vec3(),\n        ease = 0.25,\n        inertia = 0.85,\n        enableRotate = true,\n        rotateSpeed = 0.1,\n        autoRotate = false,\n        autoRotateSpeed = 1.0,\n        enableZoom = true,\n        zoomSpeed = 1,\n        enablePan = true,\n        panSpeed = 0.1,\n        minPolarAngle = 0,\n        maxPolarAngle = Math.PI,\n        minAzimuthAngle = -Infinity,\n        maxAzimuthAngle = Infinity,\n        minDistance = 0,\n        maxDistance = Infinity,\n    } = {}\n) {\n    this.enabled = enabled;\n    this.target = target;\n\n    // Catch attempts to disable - set to 1 so has no effect\n    ease = ease || 1;\n    inertia = inertia || 0;\n\n    this.minDistance = minDistance;\n    this.maxDistance = maxDistance;\n\n    // current position in sphericalTarget coordinates\n    const sphericalDelta = { radius: 1, phi: 0, theta: 0 };\n    const sphericalTarget = { radius: 1, phi: 0, theta: 0 };\n    const spherical = { radius: 1, phi: 0, theta: 0 };\n    const panDelta = new Vec3();\n\n    // Grab initial position values\n    const offset = new Vec3();\n    offset.copy(object.position).sub(this.target);\n    spherical.radius = sphericalTarget.radius = offset.distance();\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n\n    this.offset = offset;\n\n    this.update = () => {\n        if (autoRotate) {\n            handleAutoRotate();\n        }\n\n        // apply delta\n        sphericalTarget.radius *= sphericalDelta.radius;\n        sphericalTarget.theta += sphericalDelta.theta;\n        sphericalTarget.phi += sphericalDelta.phi;\n\n        // apply boundaries\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\n\n        // ease values\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\n\n        // apply pan to target. As offset is relative to target, it also shifts\n        this.target.add(panDelta);\n\n        // apply rotation to offset\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\n        offset.y = spherical.radius * Math.cos(spherical.phi);\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\n\n        // Apply updated values to object\n        object.position.copy(this.target).add(offset);\n        object.lookAt(this.target);\n\n        // Apply inertia to values\n        sphericalDelta.theta *= inertia;\n        sphericalDelta.phi *= inertia;\n        panDelta.multiply(inertia);\n\n        // Reset scale every frame to avoid applying scale multiple times\n        sphericalDelta.radius = 1;\n    };\n\n    // Updates internals with new position\n    this.forcePosition = () => {\n        offset.copy(object.position).sub(this.target);\n        spherical.radius = sphericalTarget.radius = offset.distance();\n        spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n        spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n        object.lookAt(this.target);\n    };\n\n    // Everything below here just updates panDelta and sphericalDelta\n    // Using those two objects' values, the orbit is calculated\n\n    const rotateStart = new Vec2();\n    const panStart = new Vec2();\n    const dollyStart = new Vec2();\n\n    let state = STATE.NONE;\n    this.mouseButtons = { ORBIT: 0, ZOOM: 1, PAN: 2 };\n\n    function getZoomScale() {\n        return Math.pow(0.95, zoomSpeed);\n    }\n\n    function panLeft(distance, m) {\n        tempVec3.set(m[0], m[1], m[2]);\n        tempVec3.multiply(-distance);\n        panDelta.add(tempVec3);\n    }\n\n    function panUp(distance, m) {\n        tempVec3.set(m[4], m[5], m[6]);\n        tempVec3.multiply(distance);\n        panDelta.add(tempVec3);\n    }\n\n    const pan = (deltaX, deltaY) => {\n        let el = element === document ? document.body : element;\n        tempVec3.copy(object.position).sub(this.target);\n        let targetDistance = tempVec3.distance();\n        targetDistance *= Math.tan((((object.fov || 45) / 2) * Math.PI) / 180.0);\n        panLeft((2 * deltaX * targetDistance) / el.clientHeight, object.matrix);\n        panUp((2 * deltaY * targetDistance) / el.clientHeight, object.matrix);\n    };\n\n    function dolly(dollyScale) {\n        sphericalDelta.radius /= dollyScale;\n    }\n\n    function handleAutoRotate() {\n        const angle = ((2 * Math.PI) / 60 / 60) * autoRotateSpeed;\n        sphericalDelta.theta -= angle;\n    }\n\n    function handleMoveRotate(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\n        let el = element === document ? document.body : element;\n        sphericalDelta.theta -= (2 * Math.PI * tempVec2b.x) / el.clientHeight;\n        sphericalDelta.phi -= (2 * Math.PI * tempVec2b.y) / el.clientHeight;\n        rotateStart.copy(tempVec2a);\n    }\n\n    function handleMouseMoveDolly(e) {\n        tempVec2a.set(e.clientX, e.clientY);\n        tempVec2b.sub(tempVec2a, dollyStart);\n        if (tempVec2b.y > 0) {\n            dolly(getZoomScale());\n        } else if (tempVec2b.y < 0) {\n            dolly(1 / getZoomScale());\n        }\n        dollyStart.copy(tempVec2a);\n    }\n\n    function handleMovePan(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\n        pan(tempVec2b.x, tempVec2b.y);\n        panStart.copy(tempVec2a);\n    }\n\n    function handleTouchStartDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchMoveDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            tempVec2a.set(0, distance);\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\n            dolly(tempVec2b.y);\n            dollyStart.copy(tempVec2a);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            handleMovePan(x, y);\n        }\n    }\n\n    const onMouseDown = (e) => {\n        if (!this.enabled) return;\n\n        switch (e.button) {\n            case this.mouseButtons.ORBIT:\n                if (enableRotate === false) return;\n                rotateStart.set(e.clientX, e.clientY);\n                state = STATE.ROTATE;\n                break;\n            case this.mouseButtons.ZOOM:\n                if (enableZoom === false) return;\n                dollyStart.set(e.clientX, e.clientY);\n                state = STATE.DOLLY;\n                break;\n            case this.mouseButtons.PAN:\n                if (enablePan === false) return;\n                panStart.set(e.clientX, e.clientY);\n                state = STATE.PAN;\n                break;\n        }\n\n        if (state !== STATE.NONE) {\n            window.addEventListener('mousemove', onMouseMove, false);\n            window.addEventListener('mouseup', onMouseUp, false);\n        }\n    };\n\n    const onMouseMove = (e) => {\n        if (!this.enabled) return;\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.clientX, e.clientY);\n                break;\n            case STATE.DOLLY:\n                if (enableZoom === false) return;\n                handleMouseMoveDolly(e);\n                break;\n            case STATE.PAN:\n                if (enablePan === false) return;\n                handleMovePan(e.clientX, e.clientY);\n                break;\n        }\n    };\n\n    const onMouseUp = () => {\n        window.removeEventListener('mousemove', onMouseMove, false);\n        window.removeEventListener('mouseup', onMouseUp, false);\n        state = STATE.NONE;\n    };\n\n    const onMouseWheel = (e) => {\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.deltaY < 0) {\n            dolly(1 / getZoomScale());\n        } else if (e.deltaY > 0) {\n            dolly(getZoomScale());\n        }\n    };\n\n    const onTouchStart = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\n                state = STATE.ROTATE;\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchStartDollyPan(e);\n                state = STATE.DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchMove = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchMoveDollyPan(e);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchEnd = () => {\n        if (!this.enabled) return;\n        state = STATE.NONE;\n    };\n\n    const onContextMenu = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n    };\n\n    function addHandlers() {\n        element.addEventListener('contextmenu', onContextMenu, false);\n        element.addEventListener('mousedown', onMouseDown, false);\n        element.addEventListener('wheel', onMouseWheel, { passive: false });\n        element.addEventListener('touchstart', onTouchStart, { passive: false });\n        element.addEventListener('touchend', onTouchEnd, false);\n        element.addEventListener('touchmove', onTouchMove, { passive: false });\n    }\n\n    this.remove = function () {\n        element.removeEventListener('contextmenu', onContextMenu);\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('wheel', onMouseWheel);\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchend', onTouchEnd);\n        element.removeEventListener('touchmove', onTouchMove);\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    addHandlers();\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n// TODO: when would I disableVertexAttribArray ?\n// TODO: use offset/stride if exists\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n\n        if (!attr.buffer) {\n            attr.buffer = this.gl.createBuffer();\n\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        this.gl.bufferData(attr.target, attr.data, this.gl.STATIC_DRAW);\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.drawRange.start,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPositionArray() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr.data;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(array) {\n        if (!array) array = this.getPositionArray();\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: use offset/stride if exists\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = 0, l = array.length; i < l; i += 3) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(array) {\n        if (!array) array = this.getPositionArray();\n        if (!this.bounds) this.computeBoundingBox(array);\n\n        let maxRadiusSq = 0;\n        for (let i = 0, l = array.length; i < l; i += 3) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        if (this.vao) this.gl.renderer.deleteVertexArray(this.vao);\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Plane extends Geometry {\n    constructor(gl, { width = 1, height = 1, widthSegments = 1, heightSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n\n        // Determine length of arrays\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        // Generate empty arrays once\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        Plane.buildPlane(position, normal, uv, index, width, height, 0, wSegs, hSegs);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n\n    static buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, u = 0, v = 1, w = 2, uDir = 1, vDir = -1, i = 0, ii = 0) {\n        const io = i;\n        const segW = width / wSegs;\n        const segH = height / hSegs;\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let y = iy * segH - height / 2;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let x = ix * segW - width / 2;\n\n                position[i * 3 + u] = x * uDir;\n                position[i * 3 + v] = y * vDir;\n                position[i * 3 + w] = depth / 2;\n\n                normal[i * 3 + u] = 0;\n                normal[i * 3 + v] = 0;\n                normal[i * 3 + w] = depth >= 0 ? 1 : -1;\n\n                uv[i * 2] = ix / wSegs;\n                uv[i * 2 + 1] = 1 - iy / hSegs;\n\n                if (iy === hSegs || ix === wSegs) continue;\n                let a = io + ix + iy * (wSegs + 1);\n                let b = io + ix + (iy + 1) * (wSegs + 1);\n                let c = io + ix + (iy + 1) * (wSegs + 1) + 1;\n                let d = io + ix + iy * (wSegs + 1) + 1;\n\n                index[ii * 6] = a;\n                index[ii * 6 + 1] = b;\n                index[ii * 6 + 2] = d;\n                index[ii * 6 + 3] = b;\n                index[ii * 6 + 4] = c;\n                index[ii * 6 + 5] = d;\n                ii++;\n            }\n        }\n    }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        if (this.blendEquation.modeRGB) this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == gl.TEXTURE_2D ? true : false,\n            anisotropy = 0,\n            level = 0,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(\n                this.target,\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\n                this.anisotropy\n            );\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        this.level,\n                        this.internalFormat,\n                        this.format,\n                        this.type,\n                        this.image[i]\n                    );\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(\n                        this.target,\n                        level,\n                        this.internalFormat,\n                        this.image[level].width,\n                        this.image[level].height,\n                        0,\n                        this.image[level].data\n                    );\n                }\n            } else {\n                // Regular texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        0,\n                        this.gl.RGBA,\n                        1,\n                        1,\n                        0,\n                        this.gl.RGBA,\n                        this.gl.UNSIGNED_BYTE,\n                        emptyPixel\n                    );\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    let b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    let b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\n","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat3 } from '../math/Mat3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\n        super();\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\n        this.gl = gl;\n        this.id = ID++;\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({ camera } = {}) {\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n        if (camera) {\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: { value: null },\n                    viewMatrix: { value: null },\n                    modelViewMatrix: { value: null },\n                    normalMatrix: { value: null },\n                    projectionMatrix: { value: null },\n                    cameraPosition: { value: null },\n                });\n            }\n\n            // Set the matrix uniforms\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n        this.program.use({ flipFaces });\n        this.geometry.draw({ mode: this.mode, program: this.program });\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n    }\n}\n","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nattribute vec3 position;\\nattribute vec2 uv;\\n\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelViewMatrix;\\n\\nvarying vec2 vUV;\\n\\nvoid main() {\\n\\n    vec3 pos = position;\\n\\n    // gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\\n    gl_Position = vec4(pos, 1.0);\\n\\n    vUV = uv;\\n\\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D _Video;\\nuniform sampler2D _Output;\\nuniform vec2 _Resolution;\\n\\nvarying vec2 vUV;\\n\\n#define FLOWSTR 0.003\\n\\nvoid main() {\\n\\n    vec2 cameraUV = vec2(1.0 - vUV.x, vUV.y);\\n    cameraUV -= 0.5;\\n    float aspect = (_Resolution.x / _Resolution.y) / (640.0 / 480.0);\\n    cameraUV.y /= aspect;\\n    cameraUV += 0.5;\\n\\n    vec3 flow = texture2D(_Output, vec2(1.0 - cameraUV.x, cameraUV.y)).xyz;\\n    // vec3 camera = texture2D(_Video, cameraUV + flow.xy).xyz;\\n    \\n    float flowMag = min(1.0, length(flow.xy));\\n    flow.xy *= FLOWSTR;\\n\\n    float r = texture2D(_Video, cameraUV + (vec2(0.003, 0.0) *flowMag) + flow.xy).x;\\n    float g = texture2D(_Video, cameraUV + (vec2(0.0, 0.0015) *flowMag) + flow.xy).y;\\n    float b = texture2D(_Video, cameraUV + (vec2(-0.003, 0.0) *flowMag) + flow.xy).z;\\n\\n    vec3 col = vec3(r,g,b);\\n\\n    // gl_FragColor = vec4(flow.x, flow.y, 0.0, 1.0);\\n    gl_FragColor = vec4(col, 1.0);\\n    // gl_FragColor = vec4(flow.x, flow.y, 0.0, 1.0);\\n\\n}\";","import {\n    Plane\n} from '../../vendors/ogl/src/extras/Plane';\nimport {\n    Program\n} from '../../Vendors/ogl/src/core/Program';\nimport {\n    Texture\n} from '../../Vendors/ogl/src/core/Texture';\nimport {\n    Mesh\n} from '../../Vendors/ogl/src/core/Mesh';\nimport {\n    Vec2\n} from '../../Vendors/ogl/src/math/Vec2';\n\nconst vert = require(\"./shader/quad.vert\");\nconst frag = require(\"./shader/quad.frag\");\n\nexport default class Quad extends Mesh {\n\n    constructor(gl) {\n\n        super(gl);\n\n        this.gl = gl;\n\n        this.geometry = new Plane(this.gl, {\n            width: 2,\n            height: 2\n        });\n\n        this.texture = new Texture(this.gl, {\n            generateMipmaps: false,\n            minFilter: this.gl.LINEAR,\n            magFilter: this.gl.LINEAR\n        });\n\n        const uniforms = {\n\n            _Video: {\n                value: this.texture\n            },\n\n            _Output: {\n                value: new Texture(this.gl)\n            },\n            _Resolution: {\n                value: new Vec2(this.gl.renderer.width, this.gl.renderer.height)\n            }\n\n        }\n\n        this.program = new Program(this.gl, {\n            vertex: vert,\n            fragment: frag,\n            uniforms,\n            transparent: false\n        });\n\n    }\n\n    update({\n        inputVideo\n    }) {\n\n        if (inputVideo.readyState >= inputVideo.HAVE_CURRENT_DATA) {\n\n            this.texture.image = inputVideo;\n            this.texture.needsUpdate = true;\n\n        }\n\n        this.program.uniforms._Resolution.value.set(this.gl.renderer.width, this.gl.renderer.height);\n\n    }\n\n    set Output(t) {\n        this.program.uniforms._Output.value = t;\n    }\n\n}","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n// TODO: when would I disableVertexAttribArray ?\n// TODO: use offset/stride if exists\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n\n        if (!attr.buffer) {\n            attr.buffer = this.gl.createBuffer();\n\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        this.gl.bufferData(attr.target, attr.data, this.gl.STATIC_DRAW);\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.drawRange.start,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPositionArray() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr.data;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(array) {\n        if (!array) array = this.getPositionArray();\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: use offset/stride if exists\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = 0, l = array.length; i < l; i += 3) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(array) {\n        if (!array) array = this.getPositionArray();\n        if (!this.bounds) this.computeBoundingBox(array);\n\n        let maxRadiusSq = 0;\n        for (let i = 0, l = array.length; i < l; i += 3) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        if (this.vao) this.gl.renderer.deleteVertexArray(this.vao);\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Triangle extends Geometry {\n    constructor(gl, { attributes = {} } = {}) {\n        Object.assign(attributes, {\n            position: { size: 2, data: new Float32Array([-1, -1, 3, -1, -1, 3]) },\n            uv: { size: 2, data: new Float32Array([0, 0, 2, 0, 0, 2]) },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// TODO: multi target rendering\n// TODO: test stencil and depth\n// TODO: destroy\n// TODO: blit on resize?\nimport { Texture } from './Texture.js';\n\nexport class RenderTarget {\n    constructor(\n        gl,\n        {\n            width = gl.canvas.width,\n            height = gl.canvas.height,\n            target = gl.FRAMEBUFFER,\n            color = 1, // number of color attachments\n            depth = true,\n            stencil = false,\n            depthTexture = false, // note - stencil breaks\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = minFilter,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            unpackAlignment,\n            premultiplyAlpha,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.buffer = this.gl.createFramebuffer();\n        this.target = target;\n        this.gl.bindFramebuffer(this.target, this.buffer);\n\n        this.textures = [];\n        const drawBuffers = [];\n\n        // create and attach required num of color textures\n        for (let i = 0; i < color; i++) {\n            this.textures.push(\n                new Texture(gl, {\n                    width,\n                    height,\n                    wrapS,\n                    wrapT,\n                    minFilter,\n                    magFilter,\n                    type,\n                    format,\n                    internalFormat,\n                    unpackAlignment,\n                    premultiplyAlpha,\n                    flipY: false,\n                    generateMipmaps: false,\n                })\n            );\n            this.textures[i].update();\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n            drawBuffers.push(this.gl.COLOR_ATTACHMENT0 + i);\n        }\n\n        // For multi-render targets shader access\n        if (drawBuffers.length > 1) this.gl.renderer.drawBuffers(drawBuffers);\n\n        // alias for majority of use cases\n        this.texture = this.textures[0];\n\n        // note depth textures break stencil - so can't use together\n        if (depthTexture && (this.gl.renderer.isWebgl2 || this.gl.renderer.getExtension('WEBGL_depth_texture'))) {\n            this.depthTexture = new Texture(gl, {\n                width,\n                height,\n                minFilter: this.gl.NEAREST,\n                magFilter: this.gl.NEAREST,\n                format: this.gl.DEPTH_COMPONENT,\n                internalFormat: gl.renderer.isWebgl2 ? this.gl.DEPTH_COMPONENT16 : this.gl.DEPTH_COMPONENT,\n                type: this.gl.UNSIGNED_INT,\n            });\n            this.depthTexture.update();\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n        } else {\n            // Render buffers\n            if (depth && !stencil) {\n                this.depthBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, this.depthBuffer);\n            }\n\n            if (stencil && !depth) {\n                this.stencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.stencilBuffer);\n            }\n\n            if (depth && stencil) {\n                this.depthStencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.depthStencilBuffer);\n            }\n        }\n\n        this.gl.bindFramebuffer(this.target, null);\n    }\n}\n","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nattribute vec2 position;\\nattribute vec2 uv;\\n\\nvarying vec2 vUV;\\n\\nvoid main() {\\n\\n    gl_Position = vec4(position, 0.0, 1.0);\\n    vUV = uv;\\n\\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D _CurrentFrame;\\nuniform sampler2D _PrevFrame;\\nuniform sampler2D _PrevFlow;\\n\\nuniform vec2 _Resolution;\\nuniform vec2 _TexelSize;\\nuniform float _Scale;\\n\\nvarying vec2 vUV;\\n\\n// #define TINY 0.000001\\n// #define THRESHOLD 0.007 \\n\\n// #define THRESHOLD 0.007\\n#define THRESHOLD 0.007\\n// #define TINY 0.00001\\n#define TINY 0.000001\\n\\n//HEAVILY INSPIRED FROM FOLLOWING SHADERS: \\n//https://github.com/moostrik/ofxFlowTools/blob/master/src/core/opticalflow/ftOpticalFlowShader.h\\n//By: Matthias Oostrik https://github.com/moostrik\\n\\n//http://www.thomasdiewald.com/\\n\\nvoid main() {\\n\\n    vec2 uv = vec2(1.0 - vUV.x, vUV.y);\\n\\n    //derivative X\\n    float dX = texture2D(_PrevFrame, uv + vec2(_TexelSize.x, 0.0)).x - texture2D(_PrevFrame, uv - vec2(_TexelSize.x, 0.0)).x;\\n    dX += texture2D(_CurrentFrame, uv + vec2(_TexelSize.x, 0.0)).x - texture2D(_CurrentFrame, uv - vec2(_TexelSize.x, 0.0)).x;\\n\\n    //derivative y\\n    float dY = texture2D(_PrevFrame, uv + vec2(0.0, _TexelSize.y)).x - texture2D(_PrevFrame, uv - vec2(0.0, _TexelSize.y)).x;\\n    dY += texture2D(_CurrentFrame, uv + vec2(0.0, _TexelSize.y)).x - texture2D(_CurrentFrame, uv - vec2(0.0, _TexelSize.y)).x;\\n\\n    //gradient magnitude\\n    float mag = sqrt((dX * dX) + (dY * dY) + TINY);\\n\\n    //brightness difference\\n    float dT = texture2D(_CurrentFrame, uv).x - texture2D(_PrevFrame, uv).x;\\n\\n    float vX = (dX / mag) * dT;\\n    float vY = (dY / mag) * dT;\\n\\n    vec2 flow = vec2(vX, vY * -1.0);\\n\\n    // float flowMag = length(flow);\\n    // flowMag = max(flowMag, THRESHOLD);\\n    // flowMag -= THRESHOLD;\\n    // flowMag /= (1.0 - THRESHOLD);\\n    // // flowMag = flowMag * flowMag;\\n    // flow += TINY; //prevents divisions by 0 when normalizing\\n    // flow = normalize(flow) * min(flowMag, 1.0);\\n    // flow *= _Scale; \\n\\n    float oldLen = sqrt((flow.x * flow.x) + (flow.y * flow.y) + 0.00001);\\n    float newLen = max(oldLen - THRESHOLD, 0.0);\\n    flow = (newLen * flow)/oldLen;\\n\\n    flow *= _Scale; \\n\\n    vec3 prevFlow = texture2D(_PrevFlow, vUV).xyz;\\n\\n    vec3 outPut = mix(vec3(flow, length(flow)), prevFlow, 0.93);\\n    // vec3 outPut = mix(vec3(flow, length(flow)), prevFlow, 0.97);\\n    \\n    // gl_FragColor = vec4(vec3(flow, length(flow)), 1.0);\\n    gl_FragColor = vec4(outPut, 1.0);\\n\\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform sampler2D _CameraFrame;\\n\\nvarying vec2 vUV;\\n\\nvoid main() {\\n\\n    vec3 col = texture2D(_CameraFrame, vUV).xyz;\\n    gl_FragColor = vec4(col, 1.0);\\n\\n}\";","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\nuniform vec2 _Resolution;\\nuniform sampler2D _Texture;\\nuniform bool _Flip;\\nuniform vec2 _BlurDirection;\\n\\nvarying vec2 vUV;\\n\\n//source: https://github.com/Jam3/glsl-fast-gaussian-blur/blob/master/5.glsl\\n\\nvec4 blur5(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\\n  vec4 color = vec4(0.0);\\n  vec2 off1 = vec2(1.3333333333333333) * direction;\\n  color += texture2D(image, uv).x * 0.29411764705882354;\\n  color += texture2D(image, uv + (off1 / resolution)).x * 0.35294117647058826;\\n  color += texture2D(image, uv - (off1 / resolution)).x * 0.35294117647058826;\\n  return color; \\n}\\n\\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\\n  vec4 color = vec4(0.0);\\n  vec2 off1 = vec2(1.3846153846) * direction;\\n  vec2 off2 = vec2(3.2307692308) * direction;\\n  color += texture2D(image, uv).x * 0.2270270270;\\n  color += texture2D(image, uv + (off1 / resolution)).x * 0.3162162162;\\n  color += texture2D(image, uv - (off1 / resolution)).x * 0.3162162162;\\n  color += texture2D(image, uv + (off2 / resolution)).x * 0.0702702703;\\n  color += texture2D(image, uv - (off2 / resolution)).x * 0.0702702703;\\n  return color;\\n}\\n\\nvoid main() {\\n\\n    gl_FragColor = blur9(_Texture, vUV, _Resolution, _BlurDirection);\\n\\n}\";","import {\n  Transform\n} from \"../../Vendors/ogl/src/core/Transform\";\nimport {\n  Triangle\n} from \"../../Vendors/ogl/src/extras/Triangle\";\nimport {\n  Program\n} from \"../../Vendors/ogl/src/core/Program\";\nimport {\n  Texture\n} from \"../../Vendors/ogl/src/core/Texture\";\nimport {\n  Mesh\n} from \"../../Vendors/ogl/src/core/Mesh\";\nimport {\n  RenderTarget\n} from \"../../Vendors/ogl/src/core/RenderTarget\";\nimport {\n  Vec2\n} from \"../../Vendors/ogl/src/math/Vec2\";\n\nconst vert = require(\"./shaders/triangle.vert\");\nconst opticalFlowFrag = require(\"./shaders/opticalflow.frag\");\nconst captureFrag = require(\"./shaders/capture.frag\");\nconst blur = require(\"./shaders/blur.frag\");\n\n/**\n * Takes a input image and does following:\n * calculates brightness derivatives for optical flow\n * takes the flow image and pass it to a blur pass\n * applies the optical flow texture to a flud sim\n *\n * getters:\n * optical flow\n * fluid sim\n */\n\nexport default class Flow {\n  constructor(gl, {\n    width = 2,\n    height = 2\n  }) {\n    this.gl = gl;\n    this.width = width;\n    this.height = height;\n    this.firstTick = true;\n\n    this.initCameraCapture();\n\n    this.initBlurPass();\n\n    this.initOpticalFlowPass();\n\n    this.initVelocityPass();\n  }\n\n  initCameraCapture() {\n    this.cameraFrame = new Texture(this.gl, {\n      generateMipmaps: false,\n      width: this.width,\n      height: this.height\n    });\n\n    const params = {\n      width: this.width,\n      height: this.height,\n      minFilter: this.gl.LINEAR,\n      magFilter: this.gl.LINEAR,\n      depth: false\n    };\n\n    this.currentFrame = new RenderTarget(this.gl, params);\n\n    this.prevFrame = new RenderTarget(this.gl, params);\n\n    this.cameraCaptureScene = new Transform();\n\n    const uniforms = {\n      _CameraFrame: {\n        value: this.cameraFrame\n      }\n    };\n\n    this.cameraCaptureQuad = new Mesh(this.gl, {\n      geometry: new Triangle(this.gl),\n      program: new Program(this.gl, {\n        vertex: vert,\n        fragment: captureFrag,\n        uniforms,\n        transparent: false\n      })\n    });\n\n    this.cameraCaptureQuad.setParent(this.cameraCaptureScene);\n  }\n\n  initBlurPass() {\n    const params = {\n      width: this.width,\n      height: this.height,\n      minFilter: this.gl.LINEAR,\n      magFilter: this.gl.LINEAR,\n      depth: false\n    };\n\n    this.blurTextureWrite = new RenderTarget(this.gl, params);\n\n    this.blurTextureRead = new RenderTarget(this.gl, params);\n\n    this.blurDirectionX = new Vec2(1.0, 0.0);\n    this.blurDirectionY = new Vec2(0.0, 1.0);\n\n    this.blurScene = new Transform();\n\n    const uniforms = {\n      _Texture: {\n        value: this.blurTextureRead.texture\n      },\n      _Resolution: {\n        value: new Vec2(this.gl.renderer.width, this.gl.renderer.height)\n      },\n      _Flip: {\n        value: false\n      },\n      _BlurDirection: {\n        value: new Vec2(0.0, 0.0)\n      }\n    };\n\n    this.blurQuad = new Mesh(this.gl, {\n      geometry: new Triangle(this.gl),\n      program: new Program(this.gl, {\n        vertex: vert,\n        fragment: blur,\n        uniforms,\n        transparent: false\n      })\n    });\n\n    this.blurQuad.setParent(this.blurScene);\n  }\n\n  initOpticalFlowPass() {\n    //texture where we render the flow vectors\n    const params = {\n      width: this.width,\n      height: this.height,\n      type: this.gl.HALF_FLOAT ||\n        this.gl.renderer.extensions[\"OES_texture_half_float\"].HALF_FLOAT_OES,\n      format: this.gl.RGBA,\n      internalFormat: this.gl.RGBA16F,\n      depth: false\n    };\n\n    this.flowVectorTextureWrite = new RenderTarget(this.gl, params);\n    this.flowVectorTextureRead = new RenderTarget(this.gl, params);\n\n    this.opticalFlowScene = new Transform();\n    const uniforms = {\n      _CurrentFrame: {\n        value: this.currentFrame.texture\n      },\n\n      _PrevFrame: {\n        value: this.prevFrame.texture\n      },\n\n      _PrevFlow: {\n        value: this.flowVectorTextureRead.texture\n      },\n      _Resolution: {\n        value: new Vec2(this.gl.renderer.width, this.gl.renderer.height)\n      },\n      _TexelSize: {\n        value: new Vec2(\n          1.0 / this.width,\n          1.0 / this.height\n        )\n      },\n      // _TexelSize: {\n      //   value: new Vec2(\n      //     0.1,\n      //     0.1\n      //   )\n      // },\n      _Scale: {\n        value: 800\n      }\n    };\n\n    this.opticalFlowQuad = new Mesh(this.gl, {\n      geometry: new Triangle(this.gl),\n      program: new Program(this.gl, {\n        uniforms,\n        vertex: vert,\n        fragment: opticalFlowFrag,\n        transparent: false\n      })\n    });\n\n    this.opticalFlowQuad.setParent(this.opticalFlowScene);\n  }\n\n  initVelocityPass() {\n    // const params = {\n    //     width: this.width,\n    //     height: this.height,\n    //     type: this.gl.HALF_FLOAT || this.gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES,\n    //     format: this.gl.RGBA,\n    //     internalFormat: this.gl.RGBA16F,\n    //     depth: false\n    // }\n    // this.velocityTextureRead =\n  }\n\n  blurInputVideo() {\n    const blurIterationCount = 12;\n\n    this.gl.renderer.autoClear = false;\n\n    for (let i = 0; i < blurIterationCount; i++) {\n      let blurRadius = blurIterationCount - i - 1;\n\n      this.blurQuad.program.uniforms._Texture.value =\n        i === 0 ? this.cameraFrame : this.blurTextureRead.texture;\n      this.blurQuad.program.uniforms._BlurDirection.value.set(\n        i % 2 === 0 ? blurRadius : 0,\n        i % 2 === 0 ? 0 : blurRadius\n      );\n      this.blurQuad.program.uniforms._Resolution.value.set(\n        this.gl.renderer.width,\n        this.gl.renderer.height\n      );\n\n      this.gl.renderer.render({\n        scene: this.blurScene,\n        target: this.blurTextureWrite\n      });\n\n      let tmp = this.blurTextureRead;\n      this.blurTextureRead = this.blurTextureWrite;\n      this.blurTextureWrite = tmp;\n    }\n\n    this.gl.renderer.autoClear = true;\n  }\n\n  saveCameraFrame() {\n    let tmp = this.prevFrame;\n    this.prevFrame = this.currentFrame;\n    this.currentFrame = tmp;\n\n    this.cameraCaptureQuad.program.uniforms._CameraFrame.value = this.blurTextureRead.texture;\n    this.gl.renderer.render({\n      scene: this.cameraCaptureScene,\n      target: this.currentFrame\n    });\n  }\n\n  update({\n    inputVideo\n  }) {\n    if (inputVideo.readyState >= inputVideo.HAVE_CURRENT_DATA) {\n      this.cameraFrame.image = inputVideo;\n      this.cameraFrame.needsUpdate = true;\n\n      //...run as usual\n      this.blurInputVideo();\n      this.saveCameraFrame();\n\n      //prewarm to prevent spike in optical flow\n      if (this.firstTick) {\n        this.blurInputVideo();\n        this.saveCameraFrame();\n        this.firstTick = false;\n      }\n    }\n\n    this.opticalFlowQuad.program.uniforms._CurrentFrame.value = this.currentFrame.texture;\n    this.opticalFlowQuad.program.uniforms._PrevFrame.value = this.prevFrame.texture;\n    this.opticalFlowQuad.program.uniforms._PrevFlow.value = this.flowVectorTextureRead.texture;\n    this.opticalFlowQuad.program.uniforms._Resolution.value.set(\n      this.gl.renderer.width,\n      this.gl.renderer.height\n    );\n    this.opticalFlowQuad.program.uniforms._TexelSize.value.set(\n      1.0 / this.gl.renderer.width,\n      1.0 / this.gl.renderer.height\n    );\n\n    this.gl.renderer.render({\n      scene: this.opticalFlowScene,\n      target: this.flowVectorTextureWrite\n    });\n\n    let tmp = this.flowVectorTextureRead;\n    this.flowVectorTextureRead = this.flowVectorTextureWrite;\n    this.flowVectorTextureWrite = tmp;\n  }\n}","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        if (this.blendEquation.modeRGB) this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\n    attribute vec2 position;\\n    attribute vec2 uv;\\n    varying vec2 vUv;\\n    varying vec2 vL;\\n    varying vec2 vR;\\n    varying vec2 vT;\\n    varying vec2 vB;\\n    uniform vec2 texelSize;\\n        void main () {\\n            vUv = uv;\\n            vL = vUv - vec2(texelSize.x, 0.0);\\n            vR = vUv + vec2(texelSize.x, 0.0);\\n            vT = vUv + vec2(0.0, texelSize.y);\\n            vB = vUv - vec2(0.0, texelSize.y);\\n            gl_Position = vec4(position, 0, 1);\\n}\";","module.exports=\"precision highp float;\\nprecision highp sampler2D;\\n#define GLSLIFY 1\\n\\n    varying vec2 vUv;\\n    uniform sampler2D uVelocity;\\n    uniform sampler2D uSource;\\n    uniform vec2 texelSize;\\n    uniform float dt;\\n    uniform float dissipation;\\n    void main () {\\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\\n        gl_FragColor = dissipation * texture2D(uSource, coord);\\n        gl_FragColor.a = 1.0;\\n}\";","module.exports=\"precision highp float;\\nprecision highp sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform sampler2D uVelocity;\\nuniform sampler2D uSource;\\nuniform vec2 texelSize;\\nuniform vec2 dyeTexelSize;\\nuniform float dt;\\nuniform float dissipation;\\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\\n        vec2 st = uv / tsize - 0.5;\\n        vec2 iuv = floor(st);\\n        vec2 fuv = fract(st);\\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\\n    }\\n    \\n    void main () {\\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\\n        gl_FragColor = dissipation * bilerp(uSource, coord, dyeTexelSize);\\n        gl_FragColor.a = 1.0;\\n    }\";","module.exports=\"precision mediump float;\\n    precision mediump sampler2D;\\n#define GLSLIFY 1\\n\\n    varying highp vec2 vUv;\\n    uniform sampler2D uTexture;\\n    uniform float value;\\n\\n    void main () {\\n\\n        gl_FragColor = value * texture2D(uTexture, vUv);\\n\\n}\";","module.exports=\"precision mediump float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying highp vec2 vUv;\\nvarying highp vec2 vL;\\nvarying highp vec2 vR;\\nvarying highp vec2 vT;\\nvarying highp vec2 vB;\\nuniform sampler2D uVelocity;\\nvoid main () {\\n    float L = texture2D(uVelocity, vL).y;\\n    float R = texture2D(uVelocity, vR).y;\\n    float T = texture2D(uVelocity, vT).x;\\n    float B = texture2D(uVelocity, vB).x;\\n    float vorticity = R - L - T + B;\\n    gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\\n}\";","module.exports=\"precision mediump float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\n\\n    varying highp vec2 vUv;\\n    varying highp vec2 vL;\\n    varying highp vec2 vR;\\n    varying highp vec2 vT;\\n    varying highp vec2 vB;\\n    uniform sampler2D uVelocity;\\n    \\n    void main () {\\n        float L = texture2D(uVelocity, vL).x;\\n        float R = texture2D(uVelocity, vR).x;\\n        float T = texture2D(uVelocity, vT).y;\\n        float B = texture2D(uVelocity, vB).y;\\n        vec2 C = texture2D(uVelocity, vUv).xy;\\n            if (vL.x < 0.0) { L = -C.x; }\\n            if (vR.x > 1.0) { R = -C.x; }\\n            if (vT.y > 1.0) { T = -C.y; }\\n            if (vB.y < 0.0) { B = -C.y; }\\n            float div = 0.5 * (R - L + T - B);\\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\\n}\";","module.exports=\"precision mediump float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying highp vec2 vUv;\\nvarying highp vec2 vL;\\nvarying highp vec2 vR;\\nvarying highp vec2 vT;\\nvarying highp vec2 vB;\\nuniform sampler2D uPressure;\\nuniform sampler2D uVelocity;\\nvoid main () {\\n        float L = texture2D(uPressure, vL).x;\\n        float R = texture2D(uPressure, vR).x;\\n        float T = texture2D(uPressure, vT).x;\\n        float B = texture2D(uPressure, vB).x;\\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\\n        velocity.xy -= vec2(R - L, T - B);\\n    gl_FragColor = vec4(velocity, 0.0, 1.0);\\n}\";","module.exports=\"precision mediump float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying highp vec2 vUv;\\nvarying highp vec2 vL;\\nvarying highp vec2 vR;\\nvarying highp vec2 vT;\\nvarying highp vec2 vB;\\nuniform sampler2D uPressure;\\nuniform sampler2D uDivergence;\\nvoid main () {\\n    float L = texture2D(uPressure, vL).x;\\n    float R = texture2D(uPressure, vR).x;\\n    float T = texture2D(uPressure, vT).x;\\n    float B = texture2D(uPressure, vB).x;\\n    float C = texture2D(uPressure, vUv).x;\\n    float divergence = texture2D(uDivergence, vUv).x;\\n    float pressure = (L + R + B + T - divergence) * 0.25;\\n    gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\\n}\";","module.exports=\"precision highp float;\\nprecision highp sampler2D;\\n#define GLSLIFY 1\\n\\n    varying vec2 vUv;\\n    uniform sampler2D uTarget;\\n    uniform float aspectRatio;\\n    uniform sampler2D color;\\n    // uniform vec2 point;\\n    // uniform float radius;\\n    \\n    void main () {\\n        // vec2 p = vUv - point.xy;\\n        // p.x *= aspectRatio;\\n        // vec3 splat = exp(-dot(p, p) / radius) * color; //replace this with optical flow\\n        vec3 splat = texture2D(color, vUv).xyz; //replace this with optical flow\\n        vec3 base = texture2D(uTarget, vUv).xyz;\\n        gl_FragColor = vec4(base + splat, 1.0);\\n}\";","module.exports=\"precision highp float;\\nprecision highp sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec2 vL;\\nvarying vec2 vR;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform sampler2D uVelocity;\\nuniform sampler2D uCurl;\\nuniform float curl;\\nuniform float dt;\\nvoid main () {\\n    float L = texture2D(uCurl, vL).x;\\n    float R = texture2D(uCurl, vR).x;\\n    float T = texture2D(uCurl, vT).x;\\n    float B = texture2D(uCurl, vB).x;\\n    float C = texture2D(uCurl, vUv).x;\\n    vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\\n    force /= length(force) + 0.0001;\\n    force *= curl * C;\\n    force.y *= -1.0;\\n    vec2 vel = texture2D(uVelocity, vUv).xy;\\n    gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\\n}\";","import {\n  Program\n} from \"../../vendors/ogl/src/core/Program\";\nimport {\n  Texture\n} from \"../../Vendors/ogl/src/core/Texture\";\nimport {\n  Mesh\n} from \"../../Vendors/ogl/src/core/Mesh\";\nimport {\n  RenderTarget\n} from \"../../Vendors/ogl/src/core/RenderTarget\";\nimport {\n  Vec2\n} from \"../../Vendors/ogl/src/math/Vec2\";\nimport {\n  Geometry\n} from \"../../Vendors/ogl/src/core/Geometry\";\n\nconst base = require(\"./shaders/baseVertex.vert\");\nconst advectionShader = require(\"./shaders/advection.frag\");\nconst advectionManualFilterShader = require(\"./shaders/advectionManualFiltering.frag\");\nconst clearShader = require(\"./shaders/clear.frag\");\nconst curlShader = require(\"./shaders/curl.frag\");\nconst divergenceShader = require(\"./shaders/divergence.frag\");\nconst gradientSubtractShader = require(\"./shaders/gradientSubtract.frag\");\nconst pressureShader = require(\"./shaders/pressure.frag\");\nconst splatShader = require(\"./shaders/splat.frag\");\nconst vorticityShader = require(\"./shaders/vorticity.frag\");\n\n/**\n * Based on OGL post fluid example: https://github.com/oframe/ogl/blob/master/examples/post-fluid-distortion.html by Nathan Gordon\n */\n\nexport default class Fluid {\n  constructor(gl) {\n    this.gl = gl;\n\n    this.initSimParams();\n    this.initSimulationPrograms();\n  }\n\n  initSimParams() {\n    this.simRes = 256.0;\n    this.dyeRes = 512.0;\n\n    this.texelSize = new Vec2(1.0 / this.simRes);\n\n    this.simParams = {\n      iterations: 4,\n      densityDissipation: 0.98,\n      velocityDissipation: 0.99,\n      pressureDissipation: 0.9,\n      curlStrength: 0.01,\n      radius: 0.2\n\n      // iterations: 4,\n      // densityDissipation: 0.98,\n      // velocityDissipation: 0.99,\n      // pressureDissipation: 0.9,\n      // curlStrength: 0.01,\n      // radius: 0.2\n\n      // }\n\n      //very gooey!\n      // this.simParams = {\n\n      //     iterations: 4,\n      //     densityDissipation: 0.99,\n      //     velocityDissipation: 0.98,\n      //     pressureDissipation: 0.99,\n      //     curlStrength: 0.1,\n      //     radius: 0.2\n    };\n  }\n\n  initSimulationPrograms() {\n    // Get supported formats and types for FBOs\n    let supportLinearFiltering = this.gl.renderer.extensions[\n      `OES_texture_${this.gl.renderer.isWebgl2 ? `` : `half_`}float_linear`\n    ];\n    const halfFloat = this.gl.renderer.isWebgl2 ?\n      this.gl.HALF_FLOAT :\n      this.gl.renderer.extensions[\"OES_texture_half_float\"].HALF_FLOAT_OES;\n    const filtering = supportLinearFiltering ? this.gl.LINEAR : this.gl.NEAREST;\n\n    let rgba, rg, r;\n\n    if (this.gl.renderer.isWebgl2) {\n      rgba = this.getSupportedFormat(\n        this.gl,\n        this.gl.RGBA16F,\n        this.gl.RGBA,\n        halfFloat\n      );\n      rg = this.getSupportedFormat(\n        this.gl,\n        this.gl.RG16F,\n        this.gl.RG,\n        halfFloat\n      );\n      r = this.getSupportedFormat(\n        this.gl,\n        this.gl.R16F,\n        this.gl.RED,\n        halfFloat\n      );\n    } else {\n      rgba = this.getSupportedFormat(\n        this.gl,\n        this.gl.RGBA,\n        this.gl.RGBA,\n        halfFloat\n      );\n      rg = rgba;\n      r = rgba;\n    }\n\n    this.densityFBO = this.createPingPongBuffer({\n      width: this.dyeRes,\n      height: this.dyeRes,\n      type: halfFloat,\n      format: rgba.format,\n      internalFormat: rgba.internalFormat,\n      minFilter: filtering,\n      depth: false\n    });\n\n    this.velocityFBO = this.createPingPongBuffer({\n      width: this.simRes,\n      height: this.simRes,\n      type: halfFloat,\n      format: rg.format,\n      internalFormat: rg.internalFormat,\n      minFilter: filtering,\n      depth: false\n    });\n\n    this.pressureFBO = this.createPingPongBuffer({\n      width: this.simRes,\n      height: this.simRes,\n      type: halfFloat,\n      format: r.format,\n      internalFormat: r.internalFormat,\n      minFilter: this.gl.NEAREST,\n      depth: false\n    });\n\n    this.divergence = new RenderTarget(this.gl, {\n      width: this.simRes,\n      height: this.simRes,\n      type: halfFloat,\n      format: r.format,\n      internalFormat: r.internalFormat,\n      minFilter: this.gl.NEAREST,\n      depth: false\n    });\n\n    this.curl = new RenderTarget(this.gl, {\n      width: this.simRes,\n      height: this.simRes,\n      type: halfFloat,\n      format: r.format,\n      internalFormat: r.internalFormat,\n      minFilter: this.gl.NEAREST,\n      depth: false\n    });\n\n    const triangle = new Geometry(this.gl, {\n      position: {\n        size: 2,\n        data: new Float32Array([-1, -1, 3, -1, -1, 3])\n      },\n      uv: {\n        size: 2,\n        data: new Float32Array([0, 0, 2, 0, 0, 2])\n      }\n    });\n\n    const clearUniforms = {\n      texelSize: {\n        value: this.texelSize\n      },\n      uTexture: {\n        value: null\n      },\n      value: {\n        value: this.simParams.pressureDissipation\n      }\n    };\n\n    this.clearProgram = new Mesh(this.gl, {\n      geometry: triangle,\n      program: new Program(this.gl, {\n        vertex: base,\n        fragment: clearShader,\n        uniforms: clearUniforms,\n        depthTest: false,\n        depthWrite: false\n      })\n    });\n\n    //for texture input\n    const splatUniforms = {\n      texelSize: {\n        value: this.texelSize\n      },\n      uTarget: {\n        value: null\n      },\n      aspectRatio: {\n        value: 1.0\n      },\n      color: {\n        value: new Texture(this.gl)\n      }\n    };\n\n    //for mouse/touch input\n    // const splatUniforms = {\n    //     texelSize: {\n    //         value: this.texelSize\n    //     },\n    //     uTarget: {\n    //         value: null\n    //     },\n    //     aspectRatio: {\n    //         value: 1.0\n    //     },\n    //     color: {\n    //         value: new Color()\n    //     },\n    //     point: {\n    //         value: new Vec2()\n    //     },\n    //     radius: {\n    //         value: 1.0\n    //     }\n    // }\n\n    this.splatProgram = new Mesh(this.gl, {\n      geometry: triangle,\n      program: new Program(this.gl, {\n        vertex: base,\n        fragment: splatShader,\n        uniforms: splatUniforms,\n        depthTest: false,\n        depthWrite: false\n      })\n    });\n\n    const advectionUniforms = {\n      texelSize: {\n        value: this.texelSize\n      },\n      dyeTexelSize: {\n        value: new Vec2(1.0 / this.dyeRes)\n      },\n      uVelocity: {\n        value: null\n      },\n      uSource: {\n        value: null\n      },\n      dt: {\n        value: 0.016\n      },\n      dissipation: {\n        value: 1.0\n      }\n    };\n\n    this.advectionProgram = new Mesh(this.gl, {\n      geometry: triangle,\n      program: new Program(this.gl, {\n        vertex: base,\n        fragment: supportLinearFiltering ?\n          advectionShader : advectionManualFilterShader,\n        uniforms: advectionUniforms,\n        depthTest: false,\n        depthWrite: false\n      })\n    });\n\n    const divergenceUniforms = {\n      texelSize: {\n        value: this.texelSize\n      },\n      uVelocity: {\n        value: null\n      }\n    };\n\n    this.divergenceProgram = new Mesh(this.gl, {\n      geometry: triangle,\n      program: new Program(this.gl, {\n        vertex: base,\n        fragment: divergenceShader,\n        uniforms: divergenceUniforms,\n        depthTest: false,\n        depthWrite: false\n      })\n    });\n\n    const curlUniforms = {\n      texelSize: {\n        value: this.texelSize\n      },\n      uVelocity: {\n        value: null\n      }\n    };\n\n    this.curlProgram = new Mesh(this.gl, {\n      geometry: triangle,\n      program: new Program(this.gl, {\n        vertex: base,\n        fragment: curlShader,\n        uniforms: curlUniforms,\n        depthTest: false,\n        depthWrite: false\n      })\n    });\n\n    const vorticityUniforms = {\n      texelSize: {\n        value: this.texelSize\n      },\n      uVelocity: {\n        value: null\n      },\n      uCurl: {\n        value: null\n      },\n      curl: {\n        value: this.simParams.curlStrength\n      },\n      dt: {\n        value: 0.016\n      }\n    };\n\n    this.vorticityProgram = new Mesh(this.gl, {\n      geometry: triangle,\n      program: new Program(this.gl, {\n        vertex: base,\n        fragment: vorticityShader,\n        uniforms: vorticityUniforms,\n        depthTest: false,\n        depthWrite: false\n      })\n    });\n\n    const pressureUniforms = {\n      texelSize: {\n        value: this.texelSize\n      },\n      uPressure: {\n        value: null\n      },\n      uDivergence: {\n        value: null\n      }\n    };\n\n    this.pressureProgram = new Mesh(this.gl, {\n      geometry: triangle,\n      program: new Program(this.gl, {\n        vertex: base,\n        fragment: pressureShader,\n        uniforms: pressureUniforms,\n        depthTest: false,\n        depthWrite: false\n      })\n    });\n\n    const gradientSubtractUniforms = {\n      texelSize: {\n        value: this.texelSize\n      },\n      uPressure: {\n        value: null\n      },\n      uVelocity: {\n        value: null\n      }\n    };\n\n    this.gradientSubtractProgram = new Mesh(this.gl, {\n      geometry: triangle,\n      program: new Program(this.gl, {\n        vertex: base,\n        fragment: gradientSubtractShader,\n        uniforms: gradientSubtractUniforms,\n        depthTest: false,\n        depthWrite: false\n      })\n    });\n  }\n\n  splat({\n    flowVectorTexture\n  }) {\n    this.splatProgram.program.uniforms.uTarget.value = this.velocityFBO.read.texture;\n    this.splatProgram.program.uniforms.aspectRatio.value =\n      this.gl.renderer.width / this.gl.renderer.height;\n    this.splatProgram.program.uniforms.color.value = flowVectorTexture;\n\n    this.gl.renderer.render({\n      scene: this.splatProgram,\n      target: this.velocityFBO.write,\n      sort: false,\n      update: false\n    });\n    this.velocityFBO.swap();\n\n    this.splatProgram.program.uniforms.uTarget.value = this.densityFBO.read.texture;\n    this.gl.renderer.render({\n      scene: this.splatProgram,\n      target: this.densityFBO.write,\n      sort: false,\n      update: false\n    });\n\n    this.densityFBO.swap();\n  }\n\n  update({\n    flowVectorTexture\n  }) {\n    this.gl.renderer.autoClear = false;\n\n    this.splat({\n      flowVectorTexture\n    });\n\n    this.curlProgram.program.uniforms.uVelocity.value = this.velocityFBO.read.texture;\n\n    this.gl.renderer.render({\n      scene: this.curlProgram,\n      target: this.curl,\n      sort: false,\n      update: false\n    });\n\n    this.vorticityProgram.program.uniforms.uVelocity.value = this.velocityFBO.read.texture;\n    this.vorticityProgram.program.uniforms.uCurl.value = this.curl.texture;\n\n    this.gl.renderer.render({\n      scene: this.vorticityProgram,\n      target: this.velocityFBO.write,\n      sort: false,\n      update: false\n    });\n\n    this.velocityFBO.swap();\n\n    this.divergenceProgram.program.uniforms.uVelocity.value = this.velocityFBO.read.texture;\n\n    this.gl.renderer.render({\n      scene: this.divergenceProgram,\n      target: this.divergence,\n      sort: false,\n      update: false\n    });\n\n    this.clearProgram.program.uniforms.uTexture.value = this.pressureFBO.read.texture;\n    this.clearProgram.program.uniforms.value.value = this.simParams.pressureDissipation;\n\n    this.gl.renderer.render({\n      scene: this.clearProgram,\n      target: this.pressureFBO.write,\n      sort: false,\n      update: false\n    });\n\n    this.pressureFBO.swap();\n\n    this.pressureProgram.program.uniforms.uDivergence.value = this.divergence.texture;\n\n    for (let i = 0; i < this.simParams.iterations; i++) {\n      this.pressureProgram.program.uniforms.uPressure.value = this.pressureFBO.read.texture;\n\n      this.gl.renderer.render({\n        scene: this.pressureProgram,\n        target: this.pressureFBO.write,\n        sort: false,\n        update: false\n      });\n\n      this.pressureFBO.swap();\n    }\n\n    this.gradientSubtractProgram.program.uniforms.uPressure.value = this.pressureFBO.read.texture;\n    this.gradientSubtractProgram.program.uniforms.uVelocity.value = this.velocityFBO.read.texture;\n\n    this.gl.renderer.render({\n      scene: this.gradientSubtractProgram,\n      target: this.velocityFBO.write,\n      sort: false,\n      update: false\n    });\n\n    this.velocityFBO.swap();\n\n    this.advectionProgram.program.uniforms.dyeTexelSize.value.set(\n      1 / this.simRes\n    );\n    this.advectionProgram.program.uniforms.uVelocity.value = this.velocityFBO.read.texture;\n    this.advectionProgram.program.uniforms.uSource.value = this.velocityFBO.read.texture;\n    this.advectionProgram.program.uniforms.dissipation.value = this.simParams.velocityDissipation;\n\n    this.gl.renderer.render({\n      scene: this.advectionProgram,\n      target: this.velocityFBO.write,\n      sort: false,\n      update: false\n    });\n\n    this.velocityFBO.swap();\n\n    this.advectionProgram.program.uniforms.dyeTexelSize.value.set(\n      1 / this.dyeRes\n    );\n    this.advectionProgram.program.uniforms.uVelocity.value = this.velocityFBO.read.texture;\n    this.advectionProgram.program.uniforms.uSource.value = this.densityFBO.read.texture;\n    this.advectionProgram.program.uniforms.dissipation.value = this.simParams.densityDissipation;\n\n    this.gl.renderer.render({\n      scene: this.advectionProgram,\n      target: this.densityFBO.write,\n      sort: false,\n      update: false\n    });\n\n    this.densityFBO.swap();\n\n    this.gl.renderer.autoClear = true;\n  }\n\n  get FluidOutput() {\n    return this.densityFBO.read.texture;\n  }\n\n  createPingPongBuffer({\n    width,\n    height,\n    wrapS,\n    wrapT,\n    minFilter = this.gl.LINEAR,\n    magFilter = minFilter,\n    type,\n    format,\n    internalFormat,\n    depth\n  }) {\n    const params = {\n      width,\n      height,\n      wrapS,\n      wrapT,\n      minFilter,\n      magFilter,\n      type,\n      format,\n      internalFormat,\n      depth\n    };\n\n    const fbo = {\n      read: new RenderTarget(this.gl, params),\n      write: new RenderTarget(this.gl, params),\n      swap: () => {\n        let tmp = fbo.read;\n        fbo.read = fbo.write;\n        fbo.write = tmp;\n      }\n    };\n\n    return fbo;\n  }\n\n  supportRenderTextureFormat(gl, internalFormat, format, type) {\n    let texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      internalFormat,\n      4,\n      4,\n      0,\n      format,\n      type,\n      null\n    );\n\n    let fbo = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      texture,\n      0\n    );\n\n    const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    if (status != gl.FRAMEBUFFER_COMPLETE) return false;\n    return true;\n  }\n\n  // Helper functions for larger device support\n  getSupportedFormat(gl, internalFormat, format, type) {\n    if (!this.supportRenderTextureFormat(gl, internalFormat, format, type)) {\n      switch (internalFormat) {\n        case gl.R16F:\n          return this.getSupportedFormat(gl, gl.RG16F, gl.RG, type);\n        case gl.RG16F:\n          return this.getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, type);\n        default:\n          return null;\n      }\n    }\n\n    return {\n      internalFormat,\n      format\n    };\n  }\n}","import {\n    Renderer\n} from \"../vendors/ogl/src/core/Renderer\";\nimport {\n    Camera\n} from \"../Vendors/ogl/src/core/Camera.js\";\nimport {\n    Transform\n} from \"../Vendors/ogl/src/core/Transform.js\";\nimport {\n    Orbit\n} from \"../Vendors/ogl/src/extras/Orbit.js\";\nimport Quad from \"./Quad/index.js\";\nimport Flow from \"./Flow/index.js\";\nimport Fluid from \"./Fluid/index.js\";\n\n\nexport default class OpticalFlow {\n    constructor() {\n        this.renderer = new Renderer({\n            width: window.innerWidth,\n            height: window.innerHeight,\n            antialias: false\n        });\n\n        this.gl = this.renderer.gl;\n        this.gl.canvas.style.position = \"absolute\";\n        this.gl.clearColor(0.96, 0.96, 0.96, 1.0);\n        this.gl.canvas.style.top = \"0\";\n        this.gl.canvas.style.left = \"0\";\n        this.gl.canvas.style.width = \"100%\";\n        this.gl.canvas.style.height = \"100%\";\n        this.gl.canvas.style.overflow = \"hidden\";\n        this.gl.canvas.style.zIndex = \"-1\";\n        document.body.appendChild(this.gl.canvas);\n\n        this.scene = new Transform();\n\n        this.camera = new Camera(this.gl, {\n            fov: 35,\n            far: 10,\n            aspect: window.innerWidth / window.innerHeight\n        });\n\n        this.orbitCamera = new Orbit(this.camera, {\n            element: this.gl.canvas\n        });\n\n        this.camera.position.z = 5;\n\n        this.initVideo();\n\n        this.initOpticalFlow();\n\n        this.initFluidSim();\n\n        this.initQuad();\n\n        this.initEvents();\n\n        this.start();\n    }\n\n    initVideo() {\n\n        this.streamAvailable = false;\n\n        this.video = document.createElement(\"video\");\n\n        const options = {\n            audio: false,\n            video: {\n                width: 640,\n                height: 480\n            }\n        };\n\n        navigator.mediaDevices\n            .getUserMedia(options)\n            .then(stream => {\n                this.video.srcObject = stream;\n                this.video.play();\n                this.streamAvailable = true;\n            })\n            .catch(error => {\n                console.error(\"no camera found\");\n            });\n    }\n\n    initOpticalFlow() {\n\n        this.flow = new Flow(this.gl, {\n            width: 640,\n            height: 480\n        });\n\n    }\n\n    initFluidSim() {\n\n        this.fluidSim = new Fluid(this.gl);\n\n    }\n\n    initQuad() {\n\n        this.quad = new Quad(this.gl);\n        this.quad.Output = this.flow.flowVectorTextureRead.texture;\n        this.quad.setParent(this.scene);\n\n    }\n\n    initEvents() {\n        window.addEventListener(\"resize\", this.onResize);\n    }\n\n    start() {\n        this.update();\n    }\n\n    render() {\n        this.renderer.render({\n            scene: this.scene,\n            camera: this.camera\n        });\n    }\n\n    update() {\n        window.requestAnimationFrame(() => this.update());\n        if (this.streamAvailable) {\n\n            this.flow.update({\n                inputVideo: this.video\n            });\n\n            this.fluidSim.update({\n                flowVectorTexture: this.flow.flowVectorTextureRead.texture\n            });\n\n            this.quad.update({\n                inputVideo: this.video\n            });\n\n            this.quad.Output = this.fluidSim.FluidOutput;\n            // this.quad.Output = this.flow.flowVectorTextureRead.texture;\n        }\n        this.render();\n    }\n\n    onResize = () => {\n        const w = window.innerWidth;\n        const h = window.innerHeight;\n        const aspect = w / h;\n        this.renderer.setSize(w, h);\n        this.camera.perspective({\n            aspect\n        });\n    };\n}","import OpticalFlow from './index';\n\nexport default class App {\n\n    constructor() {\n\n        console.log('◕_◕ this can\\'t be...real? ◕_◕');\n        console.log('douglas@adventureclub.io');\n        console.log('douglas.lilliequist@gmail.com');\n\n        new OpticalFlow();\n\n    }\n\n}\n\nwindow.onload = () => new App();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}